1.例子
    var num=12;
    num2=num;
    num2++;
    console.log(num2);
    //++num2
    //num2+=num2;
    var obj={name:"zhufeng"};
    var obj2=obj;
    obj2.name="zhufengpeixun";
    console.log(obj);

2.结构存储

    1.内存存储数据的两个逻辑组成部分：堆与栈
        栈(stack):有限的空间，不可变大小，操作速度快，线性表，先进先出。不仅仅是变量，执行环境等都可以存在于堆中，由系统自动分配。
        堆(heap):空间相对比较大，可变大小空间，map形式存储（key,value），通过new手动分配（部分对象可以不用new声明分配）

    2.堆与栈的功能：
        栈负责保存我们的少量数据代码与数据引用和代码执行路径
        堆则负责保存大量数据对象。

    3.内存地址：0x+八位数字

3.数据在内存中的存储

    1.引用类型总是放在堆中。
    2.值类型总是存在于栈中。
    3.指针总是存在于它声明的地方。

4.基本数据类型和引用数据类型区别

    1.基本数据类型把值直接赋给变量。接下来操作过程中，直接使用值操作。两个基本数据类型没有什么关系。

    2.引用数据类型：
        1.在定义一个变量
        2.开辟一个新的空间，把属性名和属性值存在这个空间中。
        3.把空间地址赋给变量。
        4.连个引用类型相等引用的同一个内存空间的值，一个改变，另外一个也跟着改变。
        5.如果一个变量断开引用，重新赋值，另一个变量不受影响

5.数据类型检测
    1.typeof:返回数据类型字符串，不能检查object下细分的类型。可以检查函数和null（例子：多个typeof嵌套）
    2.instanceof
    3.Object.prototype.toString.call();(扩展知识)
    4.constructor（[].constructor===Array）(扩展知识)